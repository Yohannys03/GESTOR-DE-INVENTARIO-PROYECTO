import numpy as np
import random
import plotly.graph_objects as go
from tkinter import *

def pronostico_demanda(demanda_actual, capacidad, tasa_demanda, diferencia_pronosticos):
    # Inicializar la variable demanda_prevista
    demanda_prevista = [demanda_actual]

    # Iterar sobre los valores de tiempo
    for i in range(1, 100):
        # Actualizar la demanda prevista
        demanda_prevista.append(demanda_prevista[-1] + tasa_demanda * (capacidad - demanda_prevista[-1]))

    # Devolver la lista de demandas previstas
    return demanda_prevista

def generar_grafica():
    # Inicializar las variables pronostico_final y pronostico_inicial
    pronostico_final = None
    pronostico_inicial = None

    # Solicitar al usuario que ingrese los valores de pronostico_final y pronostico_inicial
    pronostico_final = float(input("Ingrese el pronóstico final: "))
    pronostico_inicial = float(input("Ingrese el pronóstico inicial: "))

    # Generar datos aleatorios para la demanda actual y capacidad
    demanda_actual = random.uniform(50, 150)
    capacidad = random.uniform(150, 300)

    # Ajustar
    tasa_demanda = 0.08

    # Calcular la demanda prevista utilizando la función pronostico_demanda
    demandas_previstas = pronostico_demanda(demanda_actual, capacidad, tasa_demanda, pronostico_final - pronostico_inicial)

    # Crear y mostrar la gráfica
    fig = go.Figure()
    fig.add_trace(go.Scatter(x=np.linspace(pronostico_inicial, pronostico_final, 100), y=demandas_previstas, name='Demanda Prevista'))
    fig.update_layout(title='Demanda Prevista con Ecuación Diferencial', xaxis_title='Tiempo', yaxis_title='Demanda Prevista')
    fig.show()

# Crear la ventana principal
root = Tk()
root.title('Generador de Gráfica de Demanda Prevista')

# Crear los botones
Button(root, text="Generar Gráfica", command=generar_grafica, height=3, width=20).place(x=250, y=130)

# Iniciar la ventana
root.mainloop()


